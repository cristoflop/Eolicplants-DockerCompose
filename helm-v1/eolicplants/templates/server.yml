---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deploy-{{ .Release.Name }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: server-{{ .Release.Name }}
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
        - name: server-{{ .Release.Name }}
          image: {{ .Values.server.image }}:{{ .Values.server.tag }}
          command: [ "bash" ]
          args:
            - "-c"
            - "./wait-for-it.sh mysql-service-eolicplantsbeta:3306 -t 500 -- ./wait-for-it.sh rabbitmq-service-eolicplantsbeta:5672 -t 500 -- node src/server.js"
          env:
            {{- range .Values.server.env }}
            - name: {{ .name }}
              value: "{{ .value }}"
          {{- end }}
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: server-service-{{ .Release.Name }}
  labels:
    app: server-{{ .Release.Name }}
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: server-port
  selector:
    app: server-{{ .Release.Name }}
  {{- if (not .Values.ingress.enabled) }}
  type: {{ "NodePort" }}
  {{ else }}
  type: {{ .Values.server.serviceType }}
  {{- end }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server-to-mysql-rabbit-{{ .Release.Name }}
spec:
  podSelector:
    matchLabels:
      app: server-{{ .Release.Name }}
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mysql-{{ .Release.Name }}
      ports:
        - port: 3306
          protocol: TCP
    - to:
        - podSelector:
            matchLabels:
              app: rabbitmq-{{ .Release.Name }}
      ports:
        - port: 5672
          protocol: TCP
---
  {{- if .Values.config.enableNetworkPolicies }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server-from-ingress-{{ .Release.Name }}
spec:
  podSelector:
    matchLabels:
      app: server-{{ .Release.Name }}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
---
  {{- end }}